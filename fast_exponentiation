def fast_exp(a, b):
    
    '''
    return a^b in O(lg n)

    Arguments:
    a = float
    b = non-negative integer
    '''
    if b < 0 or type(b) != int:
        
        raise ValueError('exponent cannot be negative')
  
    if b == 0:
    
        return 1
  
    if b == 1:
  
        return a

    # if b is even: 
    #   Let 2n = b
    #   a^2n = a^n * a^n where n must be odd or even
    # if b is odd:
    #   Let 2m + 1 = b
    #   a^(2m + 1) = a^m * a^m * x
    
    if b % 2 == 1:
        
        return fast_exp(a, b//2) * fast_exp(a, b//2) * a
    
    else:
            
        return fast_exp(a, b//2) * fast_exp(a, b//2)
